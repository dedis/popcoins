"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const observable_1 = require("data/observable");
const Log_1 = require("~/lib/Log");
let ZXing = require('nativescript-zxing');
let zx = new ZXing();
let ImageSource = require('image-source');
exports.model = observable_1.fromObject({
    items: Array({
        name: "name",
        datetime: "datetime",
        location: "location",
        status: "Get scanned",
        qrcode: "something"
    }),
    party: undefined
});
function showParty(party) {
    const qrcode = zx.createBarcode({
        encode: "test",
        format: ZXing.QR_CODE,
        height: 128,
        width: 128
    });
    exports.model.notifyPropertyChange("items", Array({
        name: party.config.name,
        datetime: party.config.datetime,
        location: party.config.location,
        status: "Get scanned",
        qrcode: party.qrcodePublic()
    }));
    exports.model.set("party", party);
    Log_1.default.print("all set for party");
}
exports.showParty = showParty;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFydGllcy12aWV3LW1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsicGFydGllcy12aWV3LW1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsZ0RBQXVEO0FBR3ZELG1DQUE0QjtBQUU1QixJQUFJLEtBQUssR0FBRyxPQUFPLENBQUMsb0JBQW9CLENBQUMsQ0FBQztBQUMxQyxJQUFJLEVBQUUsR0FBRyxJQUFJLEtBQUssRUFBRSxDQUFDO0FBQ3JCLElBQUksV0FBVyxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUUvQixRQUFBLEtBQUssR0FBRyx1QkFBVSxDQUFDO0lBQzFCLEtBQUssRUFBRSxLQUFLLENBQU87UUFDZixJQUFJLEVBQUUsTUFBTTtRQUNaLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE1BQU0sRUFBRSxhQUFhO1FBQ3JCLE1BQU0sRUFBRSxXQUFXO0tBQ3RCLENBQUM7SUFDRixLQUFLLEVBQUUsU0FBUztDQUNuQixDQUFDLENBQUM7QUFFSCxtQkFBMEIsS0FBWTtJQUNsQyxNQUFNLE1BQU0sR0FBRyxFQUFFLENBQUMsYUFBYSxDQUFDO1FBQzVCLE1BQU0sRUFBRSxNQUFNO1FBQ2QsTUFBTSxFQUFFLEtBQUssQ0FBQyxPQUFPO1FBQ3JCLE1BQU0sRUFBRSxHQUFHO1FBQ1gsS0FBSyxFQUFFLEdBQUc7S0FDYixDQUFDLENBQUM7SUFFSCxhQUFLLENBQUMsb0JBQW9CLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBTztRQUM1QyxJQUFJLEVBQUUsS0FBSyxDQUFDLE1BQU0sQ0FBQyxJQUFJO1FBQ3ZCLFFBQVEsRUFBRSxLQUFLLENBQUMsTUFBTSxDQUFDLFFBQVE7UUFDL0IsUUFBUSxFQUFFLEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUTtRQUMvQixNQUFNLEVBQUUsYUFBYTtRQUNyQixNQUFNLEVBQUUsS0FBSyxDQUFDLFlBQVksRUFBRTtLQUMvQixDQUFDLENBQUMsQ0FBQztJQUNKLGFBQUssQ0FBQyxHQUFHLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQyxDQUFDO0lBQzFCLGFBQUcsQ0FBQyxLQUFLLENBQUMsbUJBQW1CLENBQUMsQ0FBQztBQUNuQyxDQUFDO0FBakJELDhCQWlCQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7ZnJvbU9iamVjdCwgT2JzZXJ2YWJsZX0gZnJvbSBcImRhdGEvb2JzZXJ2YWJsZVwiO1xuaW1wb3J0IHtJdGVtfSBmcm9tIFwiLi9zaGFyZWQvaXRlbVwiO1xuaW1wb3J0IHtCYWRnZX0gZnJvbSBcIn4vbGliL3BvcC9CYWRnZVwiO1xuaW1wb3J0IExvZyBmcm9tIFwifi9saWIvTG9nXCI7XG5cbmxldCBaWGluZyA9IHJlcXVpcmUoJ25hdGl2ZXNjcmlwdC16eGluZycpO1xubGV0IHp4ID0gbmV3IFpYaW5nKCk7XG5sZXQgSW1hZ2VTb3VyY2UgPSByZXF1aXJlKCdpbWFnZS1zb3VyY2UnKTtcblxuZXhwb3J0IGxldCBtb2RlbCA9IGZyb21PYmplY3Qoe1xuICAgIGl0ZW1zOiBBcnJheTxJdGVtPih7XG4gICAgICAgIG5hbWU6IFwibmFtZVwiLFxuICAgICAgICBkYXRldGltZTogXCJkYXRldGltZVwiLFxuICAgICAgICBsb2NhdGlvbjogXCJsb2NhdGlvblwiLFxuICAgICAgICBzdGF0dXM6IFwiR2V0IHNjYW5uZWRcIixcbiAgICAgICAgcXJjb2RlOiBcInNvbWV0aGluZ1wiXG4gICAgfSksXG4gICAgcGFydHk6IHVuZGVmaW5lZFxufSk7XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93UGFydHkocGFydHk6IEJhZGdlKSB7XG4gICAgY29uc3QgcXJjb2RlID0genguY3JlYXRlQmFyY29kZSh7XG4gICAgICAgIGVuY29kZTogXCJ0ZXN0XCIsXG4gICAgICAgIGZvcm1hdDogWlhpbmcuUVJfQ09ERSxcbiAgICAgICAgaGVpZ2h0OiAxMjgsXG4gICAgICAgIHdpZHRoOiAxMjhcbiAgICB9KTtcblxuICAgIG1vZGVsLm5vdGlmeVByb3BlcnR5Q2hhbmdlKFwiaXRlbXNcIiwgQXJyYXk8SXRlbT4oe1xuICAgICAgICBuYW1lOiBwYXJ0eS5jb25maWcubmFtZSxcbiAgICAgICAgZGF0ZXRpbWU6IHBhcnR5LmNvbmZpZy5kYXRldGltZSxcbiAgICAgICAgbG9jYXRpb246IHBhcnR5LmNvbmZpZy5sb2NhdGlvbixcbiAgICAgICAgc3RhdHVzOiBcIkdldCBzY2FubmVkXCIsXG4gICAgICAgIHFyY29kZTogcGFydHkucXJjb2RlUHVibGljKClcbiAgICB9KSk7XG4gICAgbW9kZWwuc2V0KFwicGFydHlcIiwgcGFydHkpO1xuICAgIExvZy5wcmludChcImFsbCBzZXQgZm9yIHBhcnR5XCIpO1xufVxuIl19
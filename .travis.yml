env:
  global:
  - secure: wed+Mko4TxNZBXBgKzaetFsc5fsx03M9T/POOiIAsX4Ute7FVg+e2UNMxgHSg5ZKb1ftRaqq3HKq7qtbzobs0q8rlZsc8EvsmbahZAfEaIqqQUFNYW1z4tIc1Rb1bCaabXaXFscWgWytgUw8I87DXxL+slrhn7psndIGVfb0Hz3jhLmCaeDz6U2otqKSmsPqHrwvB7cjmg/UzG3y8njym9RkSj0iep6LPyU/HEZZQM1QR7ZsScty5dsaUnilF+vu53SywtTkqu2RgnAzKT1Sb/qDYVQKmivy2kiRckoxRdub/ljJS5wz3vojcrCwZh4VzfQTHr14osaB1PW5zyDI1zr6WeEfDaLY9a86pJfVzSUAxebgfuMLmd2Tk/0hLw46YfB8MOVsi+NK3eC6+I47bH/9poQL6GNFQIWrXN8y2UthV4DlNL5zTpaztV78W8chNjZNlG7745TjQkRyZZdgmd7Md7xIcg4IGEPm6P2Qq+clgjlkN8qG9qgbEUcFAPpEFdoraXo6Uf4tPCqbxkdiOYpvs65HXDZi4qLvFrDmp8e2wCvToeAldCNxeMDVIYlh+3s151cWNnyU8QoNixsiUalcGnKSwvbmDKLyyukq8UPCWK9c0ciOUxK7GpC36c25uOzukznXLzrfoHaBcK4rXydFSEqpuK8LaAN1Amw4rX8=

matrix:
  include:
  - stage: Build
    os: osx
    env:
    - BuildiOS="11"
    - Xcode="9.2"
    osx_image: xcode9.2
    language: node_js
    node_js: '8'
    jdk: oraclejdk8
    script:
    - cd popcoin
    - make
    - tns build ios
    - ls -lR platforms/ios $HOME/Library/Developer/Xcode/DerivedData
    # Seems like this will be required if we wnat to sign it.
    #- tns prepare ios
    #- xcodebuild -workspace platforms/ios/popcoin.xcworkspace -scheme popcoin  -derivedDataPath platforms/ios-derived
    #- last=`curl "https://dashboard.applivery.com/api/builds/app/5b4489e0b5676eb6414b0580" -H "Authorization:$APPLIVERY_API_KEY" | jq -r '.response[] | select(.versionName == "From Travis")| select(.so == "ios") | ._id'`
    #- curl "https://dashboard.applivery.com/api/builds/$last" -X DELETE -H "Authorization:$APPLIVERY_API_KEY" || true
    #- curl "https://dashboard.applivery.com/api/builds" -X POST -H "Authorization:$APPLIVERY_API_KEY"
    #  -F app="5b4489e0b5676eb6414b0580" -F versionName="From Travis" -F os="ios"
    #  -F notes="Built from branch $TRAVIS_BRANCH, commit $TRAVIS_COMMIT."
    #  -F package=@"platforms/ios-derived/Build/Products/Debug-iphoneos/popcoin.ipa"
    - tns test ios
  - language: android
    env:
    - BuildAndroid="27"
    os: linux
    jdk: oraclejdk8
    # LTS code name carbon => 8.x series. See https://github.com/nodejs/Release#lts_schedule
    before_install: nvm install --lts=carbon
    script:
    - cd popcoin
    - make
    - tns build android --env.aot --env.uglify --env.snapshot
    # Find the previous one, remove, post the new one.
    - last=`curl "https://dashboard.applivery.com/api/builds/app/5b4489e0b5676eb6414b0580" -H "Authorization:$APPLIVERY_API_KEY" | jq -r '.response[] | select(.versionName == "From Travis")| select(.so == "android") | ._id'`
    - curl "https://dashboard.applivery.com/api/builds/$last" -X DELETE -H "Authorization:$APPLIVERY_API_KEY" || true
    - curl "https://dashboard.applivery.com/api/builds" -X POST -H "Authorization:$APPLIVERY_API_KEY"
      -F app="5b4489e0b5676eb6414b0580" -F versionName="From Travis" -F os="android"
      -F notes="Built from branch $TRAVIS_BRANCH, commit $TRAVIS_COMMIT."
      -F package=@"platforms/android/app/build/outputs/apk/debug/app-debug.apk"
    - tns test android

android:
  components:
  - tools
  - platform-tools
  - build-tools-27.0.3
  - android-27
  - extra-android-m2repository
  
before_cache:
- rm -f $HOME/.gradle/caches/modules-2/modules-2.lock

cache:
  directories:
  - ".nvm"
  - "$HOME/.gradle/caches/"
  - "$HOME/.gradle/wrapper/"
  
install:
# nativescript@4.0.2 because of issue #35.
- echo no | npm install -g nativescript@4.0.2
- node --version
- tns --version
- tns usage-reporting disable
- tns error-reporting disable

notifications:
  email: false
